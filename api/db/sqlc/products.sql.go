// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: products.sql

package db

import (
	"context"
)

const getProducts = `-- name: GetProducts :many
SELECT pid, title, description, quantity, price, status, created_on, updated_on, updated_by FROM products ORDER BY ? LIMIT ? OFFSET ?
`

type GetProductsParams struct {
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

func (q *Queries) GetProducts(ctx context.Context, arg GetProductsParams) ([]Product, error) {
	rows, err := q.db.QueryContext(ctx, getProducts, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Product
	for rows.Next() {
		var i Product
		if err := rows.Scan(
			&i.Pid,
			&i.Title,
			&i.Description,
			&i.Quantity,
			&i.Price,
			&i.Status,
			&i.CreatedOn,
			&i.UpdatedOn,
			&i.UpdatedBy,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
