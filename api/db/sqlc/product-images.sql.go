// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: product-images.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const getProductImages = `-- name: GetProductImages :many
SELECT img_id, product_id, image_url
FROM public.product_images where status = 'active' and product_id = $1
`

type GetProductImagesRow struct {
	ImgID     uuid.UUID     `json:"img_id"`
	ProductID sql.NullInt32 `json:"product_id"`
	ImageUrl  string        `json:"image_url"`
}

func (q *Queries) GetProductImages(ctx context.Context, productID sql.NullInt32) ([]GetProductImagesRow, error) {
	rows, err := q.db.QueryContext(ctx, getProductImages, productID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetProductImagesRow
	for rows.Next() {
		var i GetProductImagesRow
		if err := rows.Scan(&i.ImgID, &i.ProductID, &i.ImageUrl); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
